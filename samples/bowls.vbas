bowls = array(
    array(10,0) ' the jack
)

' Constants
WIDTH = 20
HEIGHT = 20

function check_collision(x, y, other)
    other_x = bowls[other][0]
    other_y = bowls[other][1]
    floor(x + 0.5) == floor(other_x + 0.5) and floor(y + 0.5) == floor(other_y + 0.5)
end

function move(num, force, direction)
    yv = 1
    xv = 0.4
    bias = -((xv / force) * 2)

    xv = xv - 0.1 + (rand()*0.2)

    if direction == "<" then
        xv = -xv
        bias = -bias
    end

    x = bowls[num][0]
    y = bowls[num][1]
    
    for i = 1 to force
        x = x + xv
        y = y + yv
        xv = xv + bias
        for b = 0 to len(bowls)-1
            if b <> num and check_collision(x,y,b) then
                move(b, force+1-i, direction)
            end
        next
        bowls[num] = array(x,y)
    next  
end

function find_index(array, val)
    for i = 0 to len(array) - 1
        if array[i][0] == val then
            i exit
        end
    next
    -1
end

function text_line(char, len)
    for i = 0 to len
        print(char, false)
    next
end

function round(n)
    floor(n+0.5)
end

function display()
    row = HEIGHT
    ' print bank
    for b = 1 to len(bowls)-1
        if round(bowls[b][1]) > HEIGHT then
            if b mod 2 == 0 then
                print("{b}", false, "red")
            else
                print("{b}", false, "blue")
            end
        end
    next
    ' print ditch
    print("")
    text_line("=", WIDTH+4)
    print("")
    print(" D|", false)
    for col = 0 to WIDTH
        if round(bowls[0][1]) > HEIGHT and round(bowls[0][0]) == col then
            print(".", false)
        else
            print(" ", false)
        end
    next
    print("|")
    text_line("=", WIDTH+4)
    print("")
    ' print rink
    while row > 0
        cols_a = array()
        cols_b = array()
        col_jack = -1

        cols = array()

        for b = 0 to len(bowls) - 1
            coord = bowls[b]
            x = floor(coord[0] + 0.5)
            y = floor(coord[1] + 0.5)
            if row == y then
                cols = push(cols, array(x,b))
            end
        next

        print("{row,"3.0"}|", false)
        for col = 0 to WIDTH
            index = find_index(cols, col)
            if index >= 0 then
                b = cols[index][1]
                if b == 0 then
                    print(".", false)
                else
                    if b mod 2 == 0 then
                        print("{b}", false, "red")
                    else
                        print("{b}", false, "blue")
                    end
                end
            else
                print(" ", false)
            end
        next
        print("|")
        row=row-1
    end
end

function calc_distance(bowl)
    jack_x = bowls[0][0]
    jack_y = bowls[0][1]
    x = bowls[bowl][0]
    y = bowls[bowl][1]

    sqrt((x - jack_x)^2 + (y - jack_y)^2)
end

function calc_score()
    team_a = array()
    team_b = array()
    if round(bowls[0][1]) > HEIGHT then
        bowls[0]=array(bowls[0][0], HEIGHT + 1)
    end
    for b = 1 to len(bowls)-1
        dist = 0
        if round(bowls[b][1]) > HEIGHT then
            ' ditch no score
            dist = 999
        else
            dist = calc_distance(b)
        end
        if b mod 2 == 0 then
            team_a = push(team_a, dist)
        else
            team_b = push(team_b, dist)
        end
    next
    score = 0
    team_a = sort(team_a)
    team_b = sort(team_b)
    if team_a[0] < team_b[0] then
        ' player a winner
        for i = 0 to len(team_a)-1
            if team_a[i] < team_b[0] then
                score = score + 1
            end
        next
        print("red player won with {score}")
    else
        ' player b winner
        for i = 0 to len(team_b)-1
            if team_b[i] < team_a[0] then
                score = score + 1
            end
        next
        print("blue player won with {score}")
    end

end

function get_computer_move()
    dir = ">"
    if rand() > 0.5 then dir = "<" end
    force = bowls[0][1]
    "{dir}{force}"
end

function get_human_move()
    while true
        inp = input("Enter your move: ")
        direction = left(inp,1)
        force = val(mid(inp,2))
        if force > 5 and direction ==  "<" or direction == ">"  then
            inp exit
        else
            print("invalid bowl")
        end
    end
end


bowls[0] = array(10,17)
display()

for go = 1 to 8
    inp = ""
    if go mod 2 == 0 then
        inp = get_computer_move()
    else
        inp = get_human_move()
    end
    direction = left(inp,1)
    force = val(mid(inp,2))
    if force == 0 then
        print("invalid bowl")
    end
    bowls = push(bowls, array(10 , 0))
    move(go, force, direction)

    for i = 1 to len(bowls) - 1
        print("bowl {i} is {calc_distance(i)} from the jack")
    next

    display()
next

calc_score()





